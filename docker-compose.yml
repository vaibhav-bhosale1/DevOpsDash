version: '3.8'

services:

  # --- Backend Service (FastAPI) ---
  backend:
    build: ./backend
    container_name: Devopsdashcontainer
    ports:
      - "8000:8000"
    env_file:
      - ./backend/.env
    networks:
      - app_network
    restart: always

  # --- Frontend Service (React + Nginx) ---
  frontend:
    build:
      context: .                  # ðŸ‘ˆ Changed to project root
      dockerfile: frontend/Dockerfile  # ðŸ‘ˆ Specify Dockerfile path
    container_name: devopsdashcontainer
    networks:
      - app_network
    restart: always

  # --- Nginx Reverse Proxy Service ---
  nginx:
    image: nginx:latest
    container_name: devopsdashcontainer_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - ./data/certbot/conf:/etc/letsencrypt:rw
      - ./data/certbot/www:/var/www/certbot:rw
    depends_on:
      - backend
      - frontend
    networks:
      - app_network
    restart: always

  # --- Prometheus Monitoring Service ---
  prometheus:
    image: prom/prometheus:latest
    container_name: devopsdashcontainer_promenthus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command: --config.file=/etc/prometheus/prometheus.yml --web.enable-lifecycle
    depends_on:
      - backend
    networks:
      - app_network
    restart: always

  # --- Grafana Visualization Service ---
  grafana:
    image: grafana/grafana:latest
    container_name: devopsdashcontainer_grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    env_file:
      - ./grafana/.env
    depends_on:
      - prometheus
    networks:
      - app_network
    restart: always

networks:
  app_network:
    driver: bridge

volumes:
  prometheus_data:
  grafana_data:
